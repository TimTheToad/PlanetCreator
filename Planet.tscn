[gd_scene load_steps=7 format=2]

[sub_resource type="SphereMesh" id=1]

[sub_resource type="Shader" id=2]
code = "shader_type spatial;

// Colors
uniform vec4 ground_color : hint_color;
uniform vec4 mountain_color : hint_color;
uniform vec4 snow_color : hint_color;
uniform vec4 water_color : hint_color;

// Noise textures
uniform sampler2D heightmap : hint_white;

uniform float slider : hint_range(0.0, 1.0, 0.01);
uniform float water_amount : hint_range(0.0, 1.0, 0.01);
uniform float mountain_amount : hint_range(0.0, 1.0, 0.01);
uniform float snow_amount : hint_range(0.0, 1.0, 0.01);

varying float vertex_height;

void vertex() {
	VERTEX = VERTEX + NORMAL * texture(heightmap, UV).rgb * slider;
	vertex_height = length(VERTEX) - 1.0;
}

void fragment() {
	
	// Water coloring
	float isWater = step(water_amount, vertex_height);
	float isMountain = step(vertex_height, mountain_amount);
	float isSnow = step(vertex_height, snow_amount);
	
	vec4 color = ground_color * isWater * isMountain;
	color += water_color * (1.0 - isWater);
	color += mountain_color * (1.0 - isMountain);
	color += snow_color * (1.0 - isSnow);
	
	// Mountain color
	ALBEDO = color.rgb;
}"

[sub_resource type="OpenSimplexNoise" id=5]

[sub_resource type="NoiseTexture" id=6]
seamless = true
noise = SubResource( 5 )

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/ground_color = Color( 0.0666667, 0.694118, 0.239216, 1 )
shader_param/mountain_color = Color( 0.396078, 0.337255, 0.2, 1 )
shader_param/snow_color = Color( 1, 1, 1, 1 )
shader_param/water_color = Color( 0.513726, 0.6, 0.933333, 1 )
shader_param/slider = 0.7
shader_param/water_amount = 0.32
shader_param/mountain_amount = 0.42
shader_param/snow_amount = 0.46
shader_param/heightmap = SubResource( 6 )

[sub_resource type="ViewportTexture" id=4]
viewport_path = NodePath("Viewport")

[node name="Spatial" type="Spatial"]

[node name="Planet Mesh" type="MeshInstance" parent="."]
mesh = SubResource( 1 )
material/0 = SubResource( 3 )

[node name="GUI" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = 1.10803
margin_bottom = 1.10803
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="GUI"]
margin_right = 247.0
margin_bottom = 66.0

[node name="HBoxContainer" type="VBoxContainer" parent="GUI/Panel"]
margin_right = 245.0
margin_bottom = 109.0

[node name="Label" type="Label" parent="GUI/Panel/HBoxContainer"]
margin_right = 245.0
margin_bottom = 14.0
text = "Slider landscape: "

[node name="Label2" type="Label" parent="GUI/Panel/HBoxContainer"]
margin_top = 18.0
margin_right = 245.0
margin_bottom = 32.0
text = "Slider water: "

[node name="Label3" type="Label" parent="GUI/Panel/HBoxContainer"]
margin_top = 36.0
margin_right = 245.0
margin_bottom = 50.0
text = "Slider water: "

[node name="AlternateView" type="Panel" parent="GUI"]
anchor_left = 0.768
anchor_right = 0.889
margin_left = 74.568
margin_right = 115.664
margin_bottom = 148.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="GUI/AlternateView"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -65.5
margin_top = -64.5
margin_right = 190.5
margin_bottom = 191.5
texture = SubResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Camera" type="Camera" parent="."]
transform = Transform( -1.62921e-07, 0, 1, 0, 1, 0, -1, 0, -1.62921e-07, 4.2697, 0, 0 )

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 128, 128 )

[node name="Camera" type="Camera" parent="Viewport"]
transform = Transform( -0.731921, 0.454592, -0.507579, 0, 0.744919, 0.667155, 0.681389, 0.488305, -0.545222, -4.38541, 5.76412, -4.71064 )
